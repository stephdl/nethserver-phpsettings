{
use esmith::AccountsDB;

my $accounts = esmith::AccountsDB->open_ro;
my $AllowUrlfOpen = $accounts->get_prop("$Name",'PhpAllowUrlfOpen') || 'enabled';
my $MemoryLimit = $accounts->get_prop("$Name",'PhpMemoryLimit') || '0';
my $UpMaxFileSize = $accounts->get_prop("$Name",'PhpUpMaxFileSize') || '0';
my $PostMaxSize = $accounts->get_prop("$Name",'PhpPostMaxSize') || '0';
my $MaxExecTime = $accounts->get_prop("$Name",'PhpMaxExecTime') || 'disabled';
my $MaxFileUploads = $accounts->get_prop("$Name",'PhpMaxFileUploads') || 'disabled';

unless ($MaxExecTime eq 'disabled') {chop $MaxExecTime;}
unless ($MaxFileUploads eq 'disabled') {chop $MaxFileUploads;}

$OUT .= " php_admin_flag allow_url_fopen off\n" if ($AllowUrlfOpen eq 'disabled');
$OUT .= " php_admin_value memory_limit $MemoryLimit"."M\n" if ($MemoryLimit ne '0');
$OUT .= " php_admin_value upload_max_filesize $UpMaxFileSize"."M\n" if ($UpMaxFileSize ne '0');
$OUT .= " php_admin_value post_max_size $PostMaxSize"."M\n" if ($PostMaxSize ne '0');
$OUT .= " php_admin_value max_execution_time $MaxExecTime\n" if ($MaxExecTime ne 'disabled');
$OUT .= " php_admin_value max_file_uploads $MaxFileUploads\n" if ($MaxFileUploads ne 'disabled');
}
